{"version":3,"sources":["assets/016-banana.svg","assets/011-core.svg","assets/015-can.svg","assets/061-rubbish.svg","assets/052-teddy.svg","assets/050-milk carton.svg","assets/049-jumper.svg","assets/047-bulb.svg","assets/017-bones.svg","assets/014-bottle.svg","assets/green.svg","assets/red.svg","assets/blue.svg","assets/orange.svg","assets/black.svg","assets/brown.svg","assets/yellow.svg","components/Tab.js","constants.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Tab","animated","type","name","style","width","height","borderRadius","display","justifyContent","alignItems","src","animation","PAPPER","STATES","BINS","color","GREEN","porcentage","state","BLUE","YELLOW","RED","ORANGE","BLACK","BROWN","TRASH","BANANA","APPLE","CAN","TV","TEDDY","MILK","CLOTH","BULB","FISH","BOTTLE","EASY","setTab","level","levelTrash","filter","item","find","Math","floor","random","length","key","getTrash","LITTER","Array","fill","map","App","useState","litter","setLitter","coors","setCoors","score","setScore","intervalId","setIntervalId","fullScreen","setFullScreen","litterRef","useRef","current","intervalIdRef","scoreRef","start","setInterval","orderedColumns","column","index","lenght","sort","a","b","addGarbage","finishGame","clearInterval","setTimeout","alert","backgroundColor","position","onClick","row","newLitter","columnIndex","element","rowIndex","pow","recicle","borderTop","flexDirection","marginBottom","marginTop","props","opacity","coor","lastCoor","slice","handleSelect","document","body","requestFullscreen","setGameOver","console","log","amount","newColumn","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.13f0e2b5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/016-banana.cfa17003.svg\";","module.exports = __webpack_public_path__ + \"static/media/011-core.43b7ec96.svg\";","module.exports = __webpack_public_path__ + \"static/media/015-can.6969b894.svg\";","module.exports = __webpack_public_path__ + \"static/media/061-rubbish.57ec0c81.svg\";","module.exports = __webpack_public_path__ + \"static/media/052-teddy.c391276b.svg\";","module.exports = __webpack_public_path__ + \"static/media/050-milk carton.203d74bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/049-jumper.9531f21c.svg\";","module.exports = __webpack_public_path__ + \"static/media/047-bulb.40e5737d.svg\";","module.exports = __webpack_public_path__ + \"static/media/017-bones.2c149c9b.svg\";","module.exports = __webpack_public_path__ + \"static/media/014-bottle.8cc28b50.svg\";","module.exports = __webpack_public_path__ + \"static/media/green.06a56446.svg\";","module.exports = __webpack_public_path__ + \"static/media/red.6d7dd2fa.svg\";","module.exports = __webpack_public_path__ + \"static/media/blue.2272066c.svg\";","module.exports = __webpack_public_path__ + \"static/media/orange.ad7ab918.svg\";","module.exports = __webpack_public_path__ + \"static/media/black.85d479ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/brown.fa74ac1e.svg\";","module.exports = __webpack_public_path__ + \"static/media/yellow.6131dcd5.svg\";","import React from 'react'\n\nexport default function Tab({ animated, type, name }) {\n    const time = .3\n    return (\n        <div style={{ width: '20vw', height: '20vw', borderRadius: '5px', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            <img src={name} style={{ width: '70%', height: '70%', animation: `fall ${time}s ease-in 0s` }} />\n        </div>\n    )\n}\n","import BANANA from './assets/016-banana.svg'\nimport APPLE from './assets/011-core.svg'\nimport CAN from './assets/015-can.svg'\nimport TV from './assets/061-rubbish.svg'\nimport TEDDY from './assets/052-teddy.svg'\nimport MILK from './assets/050-milk carton.svg'\nimport CLOTH from './assets/049-jumper.svg'\nimport BULB from './assets/047-bulb.svg'\nimport FISH from './assets/017-bones.svg'\nimport BOTTLE from './assets/014-bottle.svg'\nimport GREEN from './assets/green.svg'\nimport RED from './assets/red.svg'\nimport BLUE from './assets/blue.svg'\nimport ORANGE from './assets/orange.svg'\nimport BLACK from './assets/black.svg'\nimport BROWN from './assets/brown.svg'\nimport YELLOW from './assets/yellow.svg'\n\nconst GLASS = 'vidrio';\nconst PAPPER = 'papel y carton';\nconst PLASTIC = 'plastico';\nconst METAL = 'metal';\nconst FABRIC = 'textil';\nconst ESCOMBRO = 'escombro';\nconst ORGANIC = 'organico';\n\nexport const STATES = {\n    filling: 'filling',\n    empty: 'empty',\n    full: 'full',\n    normal: 'normal'\n}\n\nexport const BINS = [\n    { type: GLASS, color: GREEN, porcentage: 0, state: STATES.normal },\n    { type: PAPPER, color: BLUE, porcentage: 0, state: STATES.normal },\n    { type: PLASTIC, color: YELLOW, porcentage: 0, state: STATES.normal },\n    { type: METAL, color: RED, porcentage: 0, state: STATES.normal },\n    { type: FABRIC, color: ORANGE, porcentage: 0, state: STATES.normal },\n    { type: ESCOMBRO, color: BLACK, porcentage: 0, state: STATES.normal },\n    { type: ORGANIC, color: BROWN, porcentage: 0, state: STATES.normal }];\n\nexport const TRASH = [\n    { name: BANANA, type: ORGANIC },\n    { name: APPLE, type: ORGANIC },\n    { name: CAN, type: METAL },\n    { name: TV, type: ESCOMBRO },\n    { name: TEDDY, type: FABRIC },\n    { name: MILK, type: PAPPER },\n    { name: CLOTH, type: FABRIC },\n    { name: BULB, type: GLASS },\n    { name: FISH, type: ORGANIC },\n    { name: BOTTLE, type: GLASS },]\n\nexport const EASY = [ORGANIC, PAPPER, FABRIC]\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Tab from './components/Tab'\nimport { TRASH, BINS, EASY } from './constants'\n\nconst COLUMNS = 5\n\nconst TYPES = ['red', 'green', 'yellow']\n\nconst getTrash = (level) => {\n  const levelTrash = TRASH.filter((item) => level.find(type => type === item.type))\n  return { ...levelTrash[Math.floor(Math.random() * levelTrash.length)], key: Math.random() + '' }\n}\nconst setTab = (animated) => ({ animated: animated, ...getTrash(EASY) })\nconst LITTER = new Array(COLUMNS)\n  .fill()\n  .map(() => new Array(Math.floor(Math.random() * 4) + 3).fill().map(() => setTab()))\nconst getBins = () => BINS.filter((item) => EASY.find(type => type === item.type))\n\nfunction App() {\n  const [litter, setLitter] = useState(LITTER)\n  const [coors, setCoors] = useState([])\n  const [score, setScore] = useState(0)\n  const [intervalId, setIntervalId] = useState()\n  const [fullScreen, setFullScreen] = useState(false)\n  const litterRef = useRef(litter);\n  litterRef.current = litter;\n  const intervalIdRef = useRef(intervalId);\n  intervalIdRef.current = intervalId;\n  const scoreRef = useRef(score);\n  scoreRef.current = score;\n  const toFullScreen = () => {\n    document.body.requestFullscreen();\n    setFullScreen(true)\n    start()\n  }\n  const start = () => {\n    const intervalId = setInterval(() => {\n      const orderedColumns = litterRef.current.map((column, index) => ({ lenght: column.length, column: index })).sort((a, b) => Math.random() - .5).sort((a, b) => a.lenght - b.lenght)\n      addGarbage(orderedColumns, litterRef.current, setLitter, finishGame, scoreRef.current);\n    }, 2000)\n    setIntervalId(intervalId)\n  }\n  const finishGame = () => {\n    clearInterval(intervalIdRef.current)\n    setTimeout(() => alert('perdiste'), 350)\n\n  }\n  const recicle = (type) => {\n    if (coors.length < 2 || litter[coors[0].column][coors[0].row].type !== type) {\n      return undefined\n    }\n    const newLitter = litter.map((column, columnIndex) => {\n      const newColumn = column.filter((element, rowIndex) => !coors.find(({ column, row }) => {\n        return (column === columnIndex && row === rowIndex)\n      }))\n      return newColumn || []\n    })\n    setScore(score + Math.pow(coors.length - 1, 2) * 10)\n    setCoors([])\n    setLitter(newLitter)\n  }\n  const handleSelect = (coor) => {\n    if (coors.length > 0 && !coors.find(({ column, row }) => {\n      if (column < coor.column - 1 || column > coor.column + 1) {\n        return undefined\n      }\n      if (row < coor.row - 1 || row > coor.row + 1) {\n        return undefined\n      }\n      if (row !== coor.row && column !== coor.column) {\n        return undefined\n      }\n      return true\n    })) {\n      return undefined\n    }\n    const lastCoor = coors[coors.length - 1]\n    if (coors.length > 0 && lastCoor.column === coor.column && lastCoor.row === coor.row) {\n      return setCoors(coors.slice(0, coors.length - 1))\n    }\n    if (coors.find(({ column, row }) => coor.column === column && coor.row === row)) {\n      return undefined\n    }\n    if (!coors[0] || litter[coor.column][coor.row].type === litter[coors[0].column][coors[0].row].type) {\n      setCoors([...coors, coor])\n    }\n  }\n  if (!fullScreen) {\n    return <div>\n      <h1>Reglas:</h1>\n      <p>- Seleccionar mas de un residuo del mismo tipo que esten pegados por los lados (no vale en diagonal).</p>\n      <p>- Depositarlo en el cesto que corresponda y sumar puntos!</p>\n      <p>- Si los residuos pasan la linea roja se termina el juego.</p>\n      <button onClick={toFullScreen}>Empezar el juego!</button></div>\n  }\n  return (\n    <div style={{ height: '100vh', display: 'flex', backgroundColor: 'white' }}>\n      <div style={{ position: 'absolute', display: 'flex', width: '100%', justifyContent: 'center' }}>\n        <div style={{ width: '30%' }}><p>{score}</p></div>\n        {getBins().map(({ type, color }) => <div key={type} onClick={() => recicle(type)} style={{ width: '20vw', height: '20vw', }}>\n          <img src={color} style={{ width: '70%', height: '70%' }} />\n          <p>{type}</p>\n        </div>)}\n      </div>\n      <div style={{ display: 'flex', }}>\n        {litter.map((column, columnIndex) => <div key={`column-${columnIndex}`} style={{ borderTop: '1px solid red', width: '20vw', height: '120vw', display: 'flex', flexDirection: 'column-reverse', marginBottom: 0, marginTop: 'auto' }}>\n          {column.map((props, rowIndex) => {\n            return <div key={props.key} style={{ opacity: coors.find(coor => columnIndex === coor.column && rowIndex === coor.row) ? .5 : 1 }}\n              onClick={() => { handleSelect({ column: columnIndex, row: rowIndex }) }}>\n              {<Tab {...props} />}\n            </div>\n          })}\n        </div>)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\nconst addGarbage = (orderedColumns, litter, setLitter, setGameOver, score) => {\n  const newLitter = [...litter];\n  console.log(score)\n  let amount = Math.floor(score / 1000) + 1\n  orderedColumns.map(({ length, column }) => {\n    if (amount > 0) {\n      const newColumn = [...litter[column], setTab(true)]\n      newLitter[column] = newColumn;\n      amount--\n    }\n    return undefined\n  })\n  console.log(newLitter)\n  if (newLitter.find(column => column.length > 6)) {\n    setGameOver(true)\n  }\n  setLitter(newLitter)\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}